class Solution:
    """
    @param s: input string
    @return: the longest palindromic substring
    """
    def longestPalindrome(self, s):
        # write your code here
        if not s:
            return ''
        
        n = len(s)    
        is_pa = [[False] * n for _ in range(n)]
        for i in range(n):
            is_pa[i][i] = True
        for i in range(1, n):
            is_pa[i][i-1] = True
        
        longest, max_start, max_end = 1, 0, 0
        for cur_length in range(1, n):
            for start in range(n - cur_length):
                end = start + cur_length
                is_pa[start][end] = s[start] == s[end] and is_pa[start+1][end-1]
                if is_pa[start][end] and cur_length + 1 > longest:
                    longest = cur_length
                    max_start = start
                    max_end = end
                    
        return s[max_start : max_end + 1]
